-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS rankbot.users
(
    "discId" text NOT NULL,
    "scId" text,
    "blId" text,
    "discName" text NOT NULL,
    country text NOT NULL,
    PRIMARY KEY ("discId"),
    UNIQUE ("discId")
);

CREATE TABLE IF NOT EXISTS rankbot."scoresaberScore"
(
    hash text NOT NULL,
    diff text NOT NULL,
    player text NOT NULL,
    date bigint NOT NULL,
    gained boolean NOT NULL,
    "leaderboardId" integer NOT NULL,
    "maxScore" integer,
    score integer,
    country text NOT NULL,
    "swingData" json,
    "hashDiffChar" text NOT NULL
);

CREATE TABLE IF NOT EXISTS rankbot."landingMemberList"
(
    "discId" text NOT NULL,
    "joinDate" bigint NOT NULL,
    "toBeKickedDate" bigint NOT NULL,
    CONSTRAINT "discId" PRIMARY KEY ("discId")
);

CREATE TABLE IF NOT EXISTS rankbot."mapDiff"
(
    "diffId" serial,
    "leaderboardId" integer,
    hash text NOT NULL,
    events integer,
    njs numeric,
    "offset" numeric,
    notes integer,
    bombs integer,
    obstacles integer,
    nps numeric,
    diff text,
    "mapLength" numeric(9, 3),
    "rankedDate" bigint,
    characteristic text,
    "isRanked" boolean NOT NULL,
    stars numeric(5, 2),
    chroma boolean,
    ne boolean,
    me boolean,
    cinema boolean,
    seconds numeric(9, 3),
    "maxScore" integer,
    "paritySummary" jsonb,
    "hashDiffChar" text NOT NULL,
    PRIMARY KEY ("hashDiffChar"),
    UNIQUE ("hashDiffChar")
);

CREATE TABLE IF NOT EXISTS rankbot.map
(
    "mapId" text NOT NULL,
    automapper boolean NOT NULL,
    description text,
    metadata json NOT NULL,
    stats json,
    uploaded bigint NOT NULL,
    uploader json,
    deleted boolean,
    UNIQUE ("mapId")
);

CREATE TABLE IF NOT EXISTS rankbot."activeMatches"
(
    coordinator json,
    players json[]
);

CREATE TABLE IF NOT EXISTS rankbot."mapVersion"
(
    "mapId" text NOT NULL,
    hash text NOT NULL,
    "versionState" text,
    "createAt" bigint,
    "sageScore" smallint,
    "downloadURL" text,
    "coverURL" text,
    "previewURL" text,
    PRIMARY KEY (hash),
    UNIQUE (hash)
);

CREATE TABLE IF NOT EXISTS rankbot."scoresaberUser"
(
    "scId" text NOT NULL,
    country text NOT NULL,
    "gainsDate" bigint,
    pp numeric(9, 3),
    "countryRank" integer,
    rank integer,
    "historicalRank" json[],
    PRIMARY KEY ("scId"),
    UNIQUE ("scId")
);

CREATE TABLE IF NOT EXISTS rankbot."blUser"
(
    "blId" text NOT NULL,
    country text NOT NULL,
    "gainsDate" bigint,
    pp numeric(9, 3),
    "countryRank" integer,
    rank integer,
    "historicalRank" json[],
    PRIMARY KEY ("blId"),
    UNIQUE ("blId")
);

CREATE TABLE IF NOT EXISTS rankbot."beatleaderScore"
(
    hash text NOT NULL,
    diff text NOT NULL,
    player text NOT NULL,
    date bigint NOT NULL,
    gained boolean NOT NULL,
    "leaderboardId" integer NOT NULL,
    "maxScore" integer,
    score integer,
    country text NOT NULL,
    "swingData" json,
    "hashDiffChar" text NOT NULL
);

ALTER TABLE IF EXISTS rankbot.users
    ADD FOREIGN KEY ("scId")
    REFERENCES rankbot."scoresaberUser" ("scId") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS rankbot.users
    ADD FOREIGN KEY ("blId")
    REFERENCES rankbot."blUser" ("blId") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS rankbot."scoresaberScore"
    ADD FOREIGN KEY (player)
    REFERENCES rankbot."scoresaberUser" ("scId") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS rankbot."scoresaberScore"
    ADD FOREIGN KEY ("hashDiffChar")
    REFERENCES rankbot."mapDiff" ("hashDiffChar") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS rankbot."mapDiff"
    ADD FOREIGN KEY (hash)
    REFERENCES rankbot."mapVersion" (hash) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS rankbot."mapVersion"
    ADD FOREIGN KEY ("mapId")
    REFERENCES rankbot.map ("mapId") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS rankbot."beatleaderScore"
    ADD FOREIGN KEY (player)
    REFERENCES rankbot."blUser" ("blId") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS rankbot."beatleaderScore"
    ADD FOREIGN KEY ("hashDiffChar")
    REFERENCES rankbot."mapDiff" ("hashDiffChar") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;